openapi: 3.0.3
info:
  title: OneBill API Documentation
  version: 1.0.0
  description: >
    Welcome to the OneBill API documentation. This is a developer's guide for integrating with OneBill using REST APIs.
servers:
  - url: https://api.onebill.com
    description: Production server

tags:
  - name: Authentication
    description: OAuth authentication setup
  - name: Proxy Information
    description: Using proxy headers for channel management
  - name: X-OB-Tenant-Identifier
    description: Required header for tenant-specific operations
  - name: Pricing - Product
    description: Product APIs under Pricing

x-tagGroups:
  - name: Introduction
    tags:
      - Authentication
      - Proxy Information
      - X-OB-Tenant-Identifier
  - name: Pricing
    tags:
      - Pricing - Product

paths:
  /products:
    get:
      tags:
        - Pricing - Product
      summary: Get all products
      description: Retrieve a list of all available products.
      parameters:
        - in: header
          name: X-OB-Tenant-Identifier
          required: true
          schema:
            type: string
          description: Unique identifier for the tenant.
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                      example: "PRD001"
                    productName:
                      type: string
                      example: "Internet Plan"
    post:
      tags:
        - Pricing - Product
      summary: Create a new product
      description: Adds a new product to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: "Internet Plan"
                price:
                  type: number
                  example: 49.99
      responses:
        '201':
          description: Product created successfully
        '400':
          description: Bad request

  /products/{id}:
    put:
      tags:
        - Pricing - Product
      summary: Update an existing product
      description: Updates a product using its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  example: "Updated Plan"
                price:
                  type: number
                  example: 59.99
      responses:
        '200':
          description: Product updated successfully
        '404':
          description: Product not found

    delete:
      tags:
        - Pricing - Product
      summary: Delete a product
      description: Deletes a product by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the product to delete
      responses:
        '204':
          description: Product deleted successfully (No Content)
        '404':
          description: Product not found
